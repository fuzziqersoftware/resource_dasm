#include <inttypes.h>

#include <phosg/Arguments.hh>
#include <phosg/Encoding.hh>
#include <phosg/Image.hh>
#include <string>
#include <unordered_set>

#include "IndexFormats/Formats.hh"
#include "ResourceFile.hh"
#include "SpriteDecoders/Decoders.hh"

using namespace std;
using namespace phosg;
using namespace ResourceDASM;

constexpr uint32_t RESOURCE_TYPE_LEVL = 0x4C45564C;
constexpr uint32_t RESOURCE_TYPE_SHAP = 0x53484150;
constexpr uint32_t RESOURCE_TYPE_CUST = 0x43555354;

// PIEC format (incomplete)

//   ##:  ____ ____ ____ ____ ____ ____ ____ ____ ____ ____
// Rooftops.rsrc
//   00:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   01:  0001 0000 0033 FFE4 0000 0033 0000 0000 0000 0000
//   02:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   03:  0003 0000 0000 0000 0000 0002 0000 0000 000C FFF9
//   04:  0004 0000 0000 0000 0029 0002 0000 002B 0000 0000
//   05:  0006 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   06:  0006 0000 0000 0000 0000 0000 0001 0000 0000 0001
//   07:  0007 0000 0000 0000 0000 0000 FFF3 0000 0000 0000
//   08:  0008 0000 0000 0000 001F 0002 0000 0020 000A FFFA
//   09:  0009 0022 002D 0000 0000 0000 0000 0021 0004 0000
//   0A:  000A 0000 0000 0000 0000 0000 0000 0000 001D FFF1
//   0B:  000B 0000 0000 0000 0000 0002 0000 0000 0000 0000
//   0C:  000D 0000 0030 FFBB 0000 0000 0000 0000 0000 0000
//   0D:  000D 0000 FFFD FFBB 0000 0000 0000 0000 0000 0000
//   0E:  000E 0000 0000 0000 0000 0002 0000 0000 0002 FFFB
//   0F:  000F 0000 0000 0000 0000 0002 0000 0000 0000 0000
//   10:  0010 002C 0034 FFE7 0000 0000 0000 0000 0000 0000
//   11:  0011 002E 0007 FFE1 0000 0000 0000 0000 0000 0000
//   12:  0001 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   13:  0013 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   14:  0014 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   15:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   16:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   17:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   18:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   19:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   1A:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   1B:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   1C:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   1D:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   1E:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   1F:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   20:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   21:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   22:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   23:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   24:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   25:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   26:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   27:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   28:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   29:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   2A:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   2B:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   2C:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   2D:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   2E:  002F 0000 0034 000D 0000 000D 0028 0000 000D 0028
//   2F:  002F 0000 0035 FFCE 0000 000E FFEA 0000 000E FFEA
//   30:  0030 0000 0000 00BD 0000 0000 006A 0000 0000 00D9
//   31:  0031 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   32:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
// Caverns.rsrc
//   00:  0000 0000 0028 FFE7 0000 0000 0000 0000 0000 0000
//   01:  0001 0000 0000 0000 0000 0002 0000 0000 0000 0000
//   02:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   03:  0003 0000 0000 0000 0000 0029 FFEE 0000 0008 FFFD
//   04:  0004 0000 0000 0000 0000 0056 FFE8 0000 0000 0000
//   05:  0006 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   06:  0006 0000 0000 0000 0000 0000 0001 0000 0000 0001
//   07:  0007 0000 0000 0000 0000 0000 FFF3 0000 0000 0000
//   08:  0008 0000 0000 0000 0000 0024 FFEE 0000 0009 FFFE
//   09:  0009 0000 0000 0000 0000 002D 0000 0000 0012 0000
//   0A:  000A 0000 0000 0000 0000 0000 0000 0000 001D FFF1
//   0B:  000B 0000 0019 FFF3 0000 0000 0000 0000 0000 0000
//   0C:  000D 0000 0030 FFBB 0000 0000 0000 0000 0000 0000
//   0D:  000D 0000 FFFD FFBB 0000 0000 0000 0000 0000 0000
//   0E:  000E 0000 0000 0000 0000 001F FFED 0000 0000 FFFC
//   0F:  000F 0000 0000 0000 0000 0002 0000 0000 0000 0000
//   10:  0010 0000 0021 FFE6 0000 0000 0000 0000 0000 0000
//   11:  0011 0000 FFEE FFE6 0000 0019 FFDE 0000 0000 0000
//   12:  0001 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   13:  0013 0000 002F FFDC 0000 0000 0000 0000 0000 0000
//   14:  0014 0000 0033 0000 0000 0000 0000 0000 0000 0000
//   15:  0015 0000 0000 0000 0017 0002 0000 0018 0021 FFFC
//   16:  0016 0000 0000 0000 0000 0000 0000 0000 0010 FFF3
//   17:  0017 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   18:  0018 0000 0000 0000 0000 FFCD 0000 0000 0000 0000
//   19:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   1A:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   1B:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   1C:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   1D:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   1E:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   1F:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   20:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   21:  0021 0000 0000 0000 0000 0000 0000 0000 0019 FFF5
//   22:  0022 0000 0000 0000 0000 0002 0000 0000 0000 0000
//   23:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   24:  0000 0000 0028 FFE7 0000 0000 0000 0000 0000 0000
//   25:  0000 0000 FFF5 FFE7 0000 0000 0000 0000 0000 0000
//   26:  0000 0000 FFC2 FFE7 0000 0000 0000 0000 0000 0000
//   27:  0000 0000 FF8F FFE7 0000 0000 0000 0000 0000 0000
//   28:  0000 0000 0028 005F 0000 0000 0000 0000 0000 0000
//   29:  0000 0000 FFF5 005F 0000 0000 0000 0000 0000 0000
//   2A:  0000 0000 FFC2 005F 0000 0000 0000 0000 0000 0000
//   2B:  0000 0000 FF8F 005F 0000 0000 0000 0000 0000 0000
//   2C:  0000 0000 0028 00D7 0000 0000 0000 0000 0000 0000
//   2D:  0000 0000 FFF5 00D7 0000 0000 0000 0000 0000 0000
//   2E:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   2F:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   30:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   31:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   32:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   33:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   34:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   35:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   36:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   37:  0004 0000 0000 0000 0000 0033 0000 0000 001C 0000
//   38:  0011 0040 0008 0000 0000 0000 0000 0000 0000 0000
//   39:  0011 0000 0019 0000 0000 000E FFE2 0000 0000 0000
//   3A:  0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   3B:  003B 0000 0000 0000 0000 0000 0000 0000 0000 0000
//   3C:  000A 0000 0000 0000 0000 0000 0000 0000 0019 0000
//   3D:  0012 0000 0000 0000 0000 0000 0000 0000 0000 0000

// CUST format

struct CustomRoomDefinition {
  // CUST resource ID is (room number * 25) + 4000
  // TODO: How is it specified which LEVL a CUST applies to? Is it in the CUST, the LEVL, hardcoded, or somewhere else?
  // Y = base SHAP ID
  // C = max piece ID (not necessarily equal to piece count)
  // K = piece count
  // I = piece ID (SHAP ID = this + base SHAP ID)
  // B = offset of bottom of graphic in screen space
  // L = offset of left side of graphic in screen space
  // WHAT--------------- RES#: ____ YYYY CCCC ____ ____ ____ ____ ____ 0000 0000 0000 0000 0000 0000 KKKK  IIII BBBB LLLL ____ ____ 0000 0000 0000 0000 0000 ____ ____ ____ ____ ____ ____
  // Rooftops wharf      4350: 0011 10FF 0001 0000 FFFF 0000 0000 0000 0000 0000 0000 0000 0000 0000 0002  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 00F5 0006 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Desert exit         4000: 0006 0FA0 0018 0000 FFFF FFFF 0000 0000 0000 0000 0000 0000 0000 0000 0013  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 010D 0000 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 00F8 000D 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0002 0000 0000
  //                                                                                                       0003 0001 0028 000B 000A 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0004 0000 0025 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0005 0002 0020 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0006 0002 001C 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0007 0004 001B 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0008 0004 001A 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0009 0006 0016 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000A 0004 0016 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000B 0005 0011 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000C 0008 0011 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000D 0004 000E 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000E 0002 0013 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000F 0000 0013 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0003 0000 0000
  //                                                                                                       0010 009E 0029 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0016 0001 001E 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0013 0000 001E 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Desert middle       4025: 0008 0FEB 0003 0000 FFFF FFFF 0000 0000 0000 0000 0000 0000 0000 0000 0004  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 0145 016F 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 0145 016F 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 0145 016F 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Desert right        4050: 0007 0FD2 0004 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0005  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 010A 014C 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 0144 00AE 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 0144 00AE 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 0144 00AE 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Caverns bridge      4225: 0021 1081 000E 0000 FFFF FFFF 0000 0001 0000 0000 0000 0000 0000 0000 000F  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000 0000
  //                                                                                                       0008 0104 002E 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0009 00B1 01CB 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 0000 0000 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 0001 0000 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 0002 0000 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 0000 0000 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 0000 0000 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0006 0000 0000 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0007 0000 0000 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000A 0078 0013 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000B 0071 0055 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000C 0081 012E 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000D 0057 014D 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000E 016D 01C6 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Caverns carpet      4050: 0000 0FD2 000E 0000 FFFF FFFF 0001 0000 0000 0000 0000 0000 0000 0000 000F  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 0032 00A5 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 0032 00A5 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 0032 00A5 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000E 0032 00A5 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 003E 0083 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 00F2 0010 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0006 0087 0000 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0007 016A 0199 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0008 007D 0199 0005 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0009 00F1 01CC 0005 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000A 00F6 01CB 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000B 016D 01CB 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000C 000C 0165 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000D 0087 0199 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Final tower top     4000: 0017 0FA0 0001 0000 FFFF FFFF 0000 0000 0000 0000 0000 0000 0000 0000 0002  0000 016D 0000 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 00F8 004C 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Final tower bottom  4025: 0018 0FB9 0001 0000 FFFF FFFF 0000 0000 0000 0000 0000 0000 0000 0000 0002  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 006C 0097 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Final princess      4250: 0009 10FE 0001 0000 FFFF FFFF 0000 0000 0000 0000 0000 0000 0000 0000 0001  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Final escher 2      4175: 001E 104F 0010 0000 FFFF FFFF 0001 0001 0000 0000 0000 0000 0000 0000 000F  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000 0000
  //                                                                                                       0001 016D 000E 0001 0010 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000 0000
  //                                                                                                       0005 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0006 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0007 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0008 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0009 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000A 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000B 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000C 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 016D 009B 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 0000 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 016D 0106 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000D 0078 00A3 0002 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000E 00F0 010A 0002 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Final escher 1      4150: 001D 1036 0026 0000 FFFF FFFF 0001 0001 0000 0000 0000 0000 0000 0000 0014  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000 0000
  //                                                                                                       0001 016D 000F 0001 0010 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000 0000
  //                                                                                                       001E 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       001F 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0020 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0021 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0022 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0023 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0024 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0025 0000 0000 000B 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 00F4 01D8 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 006B 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 016D 010B 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 016D 015A 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0006 016D 01E4 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0007 00F0 006F 0002 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0008 00F0 0141 0002 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0009 0078 01D9 0002 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000A 00F9 013C 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000B 007B 01DA 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Final crystal       4125: 001C 101D 000C 0000 FFFF FFFF 0000 0000 0000 0000 0000 0000 0000 0000 000C  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 0080 006B 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 016C 0103 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 015D 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 016D 01B0 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 0069 0000 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0006 016D 0000 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0007 016D 0187 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0008 FFF7 0009 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0009 FFF8 0008 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000A FFFB 0007 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000B 0000 0000 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  // Final chess 2       4100: 001B 10CC 0004 0000 FFFF FFFF 0001 0000 0000 0000 0000 0000 0000 0000 0005  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 016D 003C 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 0108 012A 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 0105 0173 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 00EF 01A5 0002 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Final chess 1       4075: 001A 10B3 0005 0000 FFFF FFFF 0001 0001 0000 0000 0000 0000 0000 0000 0006  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000 0000
  //                                                                                                       0001 0156 0000 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 016D 0091 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 005A 0042 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 005A 0042 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 00F0 0097 0002 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Final spider        4050: 0019 0FD2 000A 0000 0000 0000 0000 0001 0000 0000 0000 0000 0000 0000 000B  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000 0000
  //                                                                                                       0001 00FA 0017 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 016D 0000 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 015B 00AA 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 015B 00AA 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 0158 00A9 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0006 0157 00A9 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0007 0158 008E 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0008 0159 008E 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0009 0158 008D 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000A 0158 008D 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Ruins pedestal      4025: 0014 109A 000F 0000 005B 005B 0000 0000 0000 0000 0000 0000 0000 0000 0007  000F 00F0 0000 0000 0000 0000 0000 0000 0000 0000 007C 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0066 0000 0000 0000 0000 0000 0000 0000 006C 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 00CC 0000 0000 0000 0000 0000 0000 0000 007C 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0132 0000 0000 0000 0000 0000 0000 0000 0092 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0198 0000 0000 0000 0000 0000 0000 0000 00A0 01FE 0000 0000 0000 0000
  //                                                                                                       0000 016D 0000 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 016D 005A 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Ruins start 6       4650: 0016 122A 0002 0000 FFFF FFFF 0000 0000 0000 0000 0000 0000 0000 0000 0002  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 016E 0000 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Ruins chasm         4375: 0015 109A 000F 0000 005C 005C 0000 0000 0000 0000 0000 0000 0000 0000 0006  000F 00F0 0000 0000 0000 0000 0000 0000 0000 0000 0054 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0066 0000 0000 0000 0000 0000 0000 0000 0063 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 00CC 0000 0000 0000 0000 0000 0000 0000 0060 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0132 0000 0000 0000 0000 0000 0000 0000 0062 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0198 0000 0000 0000 0000 0000 0000 0000 0068 01FE 0000 0000 0000 0000
  //                                                                                                       000E 016D 0000 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Ruins left plateau  4350: 0005 109A 000F 0000 FFFF FFFF 0000 0000 0000 0000 0000 0000 0000 0000 000E  000F 00F0 0000 0000 0000 0000 0000 0000 0000 0000 0060 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0066 0000 0000 0000 0000 0000 0000 0000 0062 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 00CC 0000 0000 0000 0000 0000 0000 0000 0052 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0132 0000 0000 0000 0000 0000 0000 0000 0054 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0198 0000 0000 0000 0000 0000 0000 0000 0048 01FE 0000 0000 0000 0000
  //                                                                                                       0002 0108 0000 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 016D 0000 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 016D 0066 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 00CC 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 0132 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 016D 0198 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000C 0118 01C7 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0008 016D 00E7 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000B 0111 0031 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Ruins unknown       4325: 0004 109A 000F 0000 FFFF FFFF 0000 0000 0000 0000 0000 0000 0000 0000 000E  000F 00F0 0000 0000 0000 0000 0000 0000 0000 0000 0062 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0066 0000 0000 0000 0000 0000 0000 0000 0062 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 00CC 0000 0000 0000 0000 0000 0000 0000 0054 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0132 0000 0000 0000 0000 0000 0000 0000 0054 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0198 0000 0000 0000 0000 0000 0000 0000 0048 01FE 0000 0000 0000 0000
  //                                                                                                       0002 0108 FFEC 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 0000 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 0198 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 016D 0066 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 016D 0132 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 016D 00CC 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000B 0101 0196 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000A 0156 0140 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0009 010B 0024 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Ruins unknown       4300: 0003 109A 000F 0000 FFFF FFFF 0000 0000 0000 0000 0000 0000 0000 0000 000C  000F 00F0 0000 0000 0000 0000 0000 0000 0000 0000 0063 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0066 0000 0000 0000 0000 0000 0000 0000 005E 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 00CC 0000 0000 0000 0000 0000 0000 0000 0054 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0132 0000 0000 0000 0000 0000 0000 0000 0052 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0198 0000 0000 0000 0000 0000 0000 0000 0052 01FE 0000 0000 0000 0000
  //                                                                                                       0002 0108 FFD8 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 016D 0000 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 016D 00CC 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 0066 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 016D 0132 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 016D 0198 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000D 016D 0081 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Ruins unknown       4275: 0002 109A 000F 0000 FFFF FFFF 0000 0000 0000 0000 0000 0000 0000 0000 000D  000F 00F0 0000 0000 0000 0000 0000 0000 0000 0000 0062 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0066 0000 0000 0000 0000 0000 0000 0000 005A 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 00CC 0000 0000 0000 0000 0000 0000 0000 0054 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0132 0000 0000 0000 0000 0000 0000 0000 0050 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0198 0000 0000 0000 0000 0000 0000 0000 0052 01FE 0000 0000 0000 0000
  //                                                                                                       0002 0108 FFC4 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 016D 0000 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 016D 0066 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 00CC 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 0132 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 016D 0198 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       000C 013E 017E 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0006 0119 0096 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Ruins right plateau 4250: 0001 109A 000F 0000 005B 005B 0000 0000 0000 0000 0000 0000 0000 0000 000C  000F 00F0 0000 0000 0000 0000 0000 0000 0000 0000 0062 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0066 0000 0000 0000 0000 0000 0000 0000 0056 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 00CC 0000 0000 0000 0000 0000 0000 0000 0054 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0132 0000 0000 0000 0000 0000 0000 0000 0050 01FE 0000 0000 0000 0000
  //                                                                                                       000F 00F0 0198 0000 0000 0000 0000 0000 0000 0000 0054 01FE 0000 0000 0000 0000
  //                                                                                                       0002 0108 FFB0 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 0000 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 0198 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 016D 0066 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 016D 0132 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0005 016D 00CC 0000 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0009 0156 00CF 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  // Ruins throne        4200: 0022 1068 0007 0000 FFFF FFFF 0001 0001 0000 0000 0000 0000 0000 0000 0008  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000 0000
  //                                                                                                       0001 016D 0000 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 016D 01CF 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0003 016D 0038 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0004 0161 0038 0000 0010 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000 0000
  //                                                                                                       0005 0161 0073 0000 0010 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000 0000
  //                                                                                                       0006 0160 01B7 0000 0010 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000 0000
  //                                                                                                       0007 0168 0046 0000 0010 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000 0000
  // Temple alter        4075: 0020 0FEB 0011 0000 FFFF FFFF 0000 0000 0000 0000 0000 0000 0000 0000 0011  0000 016D 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0001 00D3 002B 0001 0010 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000
  //                                                                                                       0002 00CF 002C 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0003 00CF 002C 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0004 00CF 002C 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0005 00CF 002A 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0006 00CF 002A 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0007 00CF 0029 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0008 00CF 002E 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0009 00CF 002F 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000A 00CF 002C 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000B 00CF 002E 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000C 00CF 002B 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000D 00CF 002B 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000E 00D0 0030 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       000F 00D3 0039 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  //                                                                                                       0010 00D1 0031 000B 0010 0000 0000 0000 0000 0000 0000 0000 0000 0001 0000 0000
  // Temple inscription  4025: 001F 0FB9 0001 0000 FFFF FFFF 0001 0000 0000 0000 0000 0000 0000 0000 0001  0000 00D8 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000 0000

  struct CUSTHeader {
    be_uint16_t unknown_a1;
    be_uint16_t base_shap_id;
    be_uint16_t max_piece_id;
    be_uint16_t unknown_a2[11];
    be_uint16_t num_pieces;
  } __attribute__((packed));
  struct CUSTPiece {
    be_uint16_t piece_id; // SHAP ID is this + base_shap_id
    be_uint16_t bottom_offset; // top offset = 0x16D - this - SHAP height
    be_uint16_t left_offset;
    be_uint16_t type; // 0 = background, 1 = static foreground, 0x0B = animated foreground?
    be_uint16_t unknown_a1[12];
  } __attribute__((packed));

  struct Piece {
    int16_t shap_id;
    uint16_t bottom_offset;
    uint16_t left_offset;
    bool is_background;
    bool is_animated;
  };

  uint16_t base_shap_id;
  vector<Piece> pieces;

  CustomRoomDefinition(const string& res_data) {
    StringReader r(res_data);
    const auto& header = r.get<CUSTHeader>();
    this->base_shap_id = header.base_shap_id;
    while (this->pieces.size() < header.num_pieces) {
      const auto& cust_piece = r.get<CUSTPiece>();
      auto& piece = this->pieces.emplace_back();
      piece.shap_id = this->base_shap_id + cust_piece.piece_id;
      piece.bottom_offset = cust_piece.bottom_offset;
      piece.left_offset = cust_piece.left_offset;
      piece.is_background = (cust_piece.type == 0x00);
      piece.is_animated = (cust_piece.type == 0x0B);
    }
  }
};

// Level kind defs (where to get all the SHAPs, CUSTs, and CTBLs from)

struct LevelKindDefinition {
  string resource_filename;
  unique_ptr<const ResourceFile> resource_file;
  unordered_map<int16_t, int16_t> ctbl_id_for_shap_id;
  unordered_map<int16_t, const vector<ColorTableEntry>> decoded_color_tables;
  unordered_map<int16_t, const ImageRGBA8888N> decoded_shapes;
  unordered_map<int16_t, const CustomRoomDefinition> decoded_custom_rooms;

  LevelKindDefinition(string&& resource_filename, unordered_map<int16_t, int16_t>&& ctbl_id_for_shap_id)
      : resource_filename(resource_filename), ctbl_id_for_shap_id(ctbl_id_for_shap_id) {}

  const ResourceFile& get_rf() {
    if (!this->resource_file) {
      try {
        this->resource_file = make_unique<ResourceFile>(parse_resource_fork(load_file(this->resource_filename + "/..namedfork/rsrc")));
      } catch (const cannot_open_file&) {
        this->resource_file = make_unique<ResourceFile>(parse_resource_fork(load_file(this->resource_filename)));
      }
    }
    return *this->resource_file;
  }

  const vector<ColorTableEntry>& get_CTBL(int16_t id) {
    try {
      return this->decoded_color_tables.at(id);
    } catch (const out_of_range&) {
      const auto& rf = this->get_rf();
      auto [it, _] = this->decoded_color_tables.emplace(id, rf.decode_CTBL(id));
      return it->second;
    }
  }

  const ImageRGBA8888N& get_SHAP(int16_t id) {
    try {
      return this->decoded_shapes.at(id);
    } catch (const out_of_range&) {
      const auto& rf = this->get_rf();
      int16_t ctbl_id = this->ctbl_id_for_shap_id.at(id);
      auto [it, _] = this->decoded_shapes.emplace(
          id, decode_SHAP(rf.get_resource(RESOURCE_TYPE_SHAP, id)->data, this->get_CTBL(ctbl_id)));
      return it->second;
    }
  }

  const CustomRoomDefinition& get_CUST(int16_t id) {
    try {
      return this->decoded_custom_rooms.at(id);
    } catch (const out_of_range&) {
      const auto& rf = this->get_rf();
      auto [it, _] = this->decoded_custom_rooms.emplace(id, rf.get_resource(RESOURCE_TYPE_CUST, id)->data);
      return it->second;
    }
  }
};

std::unordered_map<uint16_t, LevelKindDefinition> load_level_kinds(const std::string& data_dir) {
  // TODO: We'll need some stuff from Prince.rsrc too, for e.g. potions. Maybe make this a real class when that's implemented
  // TODO: CTBL is incorrect for the 253xx SHAPs in Caverns; find the right one

  static LevelKindDefinition lk_rooftops{data_dir + "/Rooftops.rsrc", {{3501, 3500}, {3502, 3500}, {3503, 3500}, {3504, 3500}, {3505, 3500}, {3506, 3500}, {3507, 3500}, {3508, 3500}, {3509, 3500}, {3510, 3500}, {3511, 3500}, {3512, 3500}, {3513, 3500}, {3514, 3500}, {3515, 3500}, {3516, 3500}, {3517, 3500}, {3518, 3500}, {3519, 3500}, {3520, 3500}, {3521, 3500}, {3522, 3500}, {3523, 3500}, {3524, 3500}, {3525, 3500}, {3526, 3500}, {3527, 3500}, {3528, 3500}, {3529, 3500}, {3530, 3500}, {3531, 3500}, {3532, 3500}, {3533, 3500}, {3534, 3500}, {3535, 3500}, {3536, 3500}, {3537, 3500}, {3538, 3500}, {3539, 3500}, {3540, 3500}, {3541, 3500}, {3542, 3500}, {3543, 3500}, {3544, 3500}, {3545, 3500}, {3546, 3500}, {3547, 3500}, {3548, 3500}, {3549, 3500}, {3550, 3500}, {3551, 3500}, {3552, 3500}, {3553, 3500}, {3554, 3500}, {3555, 3500}, {3556, 3500}, {3557, 3500}, {3558, 3500}, {3559, 3500}, {3560, 3500}, {3561, 3500}, {3562, 3500}, {3563, 3500}, {3564, 3500}, {3565, 3500}, {3566, 3500}, {3567, 3500}, {3568, 3500}, {3569, 3500}, {3570, 3500}, {3571, 3500}, {3572, 3500}, {3573, 3500}, {3574, 3500}, {3575, 3500}, {3576, 3500}, {3577, 3500}, {3578, 3500}, {3579, 3500}, {3580, 3500}, {3581, 3500}, {3582, 3500}, {3583, 3500}, {3584, 3500}, {3585, 3500}, {3586, 3500}, {3587, 3500}, {3588, 3500}, {3589, 3500}, {3590, 3500}, {3591, 3500}, {3592, 3500}, {3593, 3500}, {3594, 3500}, {3595, 3500}, {3596, 3500}, {3597, 3500}, {3598, 3500}, {3599, 3500}, {3600, 3500}, {3601, 3500}, {3602, 3500}, {3603, 3500}, {3604, 3500}, {3605, 3500}, {3606, 3500}, {3607, 3500}, {3608, 3500}, {3609, 3501}, {3610, 3501}, {3611, 3501}, {3612, 3501}, {3613, 3501}, {3614, 3501}, {3615, 3501}, {3616, 3501}, {3617, 3501}, {3618, 3501}, {3619, 3501}, {3620, 3501}, {3621, 3501}, {3622, 3501}, {3623, 3501}, {3624, 3501}, {3625, 3501}, {3626, 3501}, {3627, 3501}, {3628, 3501}, {3629, 3501}, {3630, 3501}, {3631, 3501}, {3632, 3501}, {3633, 3501}, {3634, 3501}, {4351, 3501}, {4352, 3501}}};
  static LevelKindDefinition lk_desert{data_dir + "/Desert.rsrc", {{4000, 3500}, {4001, 3500}, {4002, 3500}, {4003, 3500}, {4004, 3500}, {4005, 3500}, {4006, 3500}, {4007, 3500}, {4008, 3500}, {4009, 3500}, {4010, 3500}, {4011, 3500}, {4012, 3500}, {4013, 3500}, {4014, 3500}, {4015, 3500}, {4016, 3500}, {4017, 3500}, {4018, 3500}, {4019, 3500}, {4020, 3500}, {4021, 3500}, {4022, 3500}, {4023, 3500}, {4024, 3500}, {4050, 3500}, {4051, 3500}, {4052, 3500}, {4053, 3500}, {4054, 3500}, {4075, 3500}, {4076, 3500}, {4077, 3500}, {4078, 3500}}};
  static LevelKindDefinition lk_caverns{data_dir + "/Caverns.rsrc", {{25303, 3500}, {25304, 3500}, {25305, 3500}, {25306, 3500}, {25307, 3500}, {25308, 3500}, {25309, 3500}, {25310, 3500}, {25311, 3500}, {25312, 3500}, {25313, 3500}, {25314, 3500}, {25315, 3500}, {25316, 3500}, {25317, 3500}, {25318, 3500}, {3501, 3500}, {3502, 3500}, {3503, 3500}, {3504, 3500}, {3505, 3500}, {3506, 3500}, {3507, 3500}, {3508, 3500}, {3509, 3500}, {3510, 3500}, {3511, 3500}, {3512, 3500}, {3513, 3500}, {3514, 3500}, {3515, 3500}, {3516, 3500}, {3517, 3500}, {3518, 3500}, {3519, 3500}, {3520, 3500}, {3521, 3500}, {3522, 3500}, {3523, 3500}, {3524, 3500}, {3525, 3500}, {3526, 3500}, {3527, 3500}, {3528, 3500}, {3529, 3500}, {3530, 3500}, {3531, 3500}, {3532, 3500}, {3533, 3500}, {3534, 3500}, {3535, 3500}, {3536, 3500}, {3537, 3500}, {3538, 3500}, {3539, 3500}, {3540, 3500}, {3541, 3500}, {3542, 3500}, {3543, 3500}, {3544, 3500}, {3545, 3500}, {3546, 3500}, {3547, 3500}, {3548, 3500}, {3549, 3500}, {3550, 3500}, {3551, 3500}, {3552, 3500}, {3553, 3500}, {3554, 3500}, {3555, 3500}, {3556, 3500}, {3557, 3500}, {3558, 3500}, {3559, 3500}, {3560, 3500}, {3561, 3500}, {3562, 3500}, {3563, 3500}, {3564, 3500}, {3565, 3500}, {3566, 3500}, {3567, 3500}, {3568, 3500}, {3569, 3500}, {3570, 3500}, {3571, 3500}, {3572, 3500}, {3573, 3500}, {3574, 3500}, {3575, 3500}, {3576, 3500}, {3577, 3500}, {3578, 3500}, {3579, 3500}, {3580, 3500}, {3581, 3500}, {3582, 3500}, {3583, 3500}, {3584, 3500}, {3585, 3500}, {3586, 3500}, {3587, 3500}, {3588, 3500}, {3589, 3500}, {3590, 3500}, {3591, 3500}, {3592, 3500}, {3593, 3500}, {3594, 3500}, {3595, 3500}, {3596, 3500}, {3597, 3500}, {3598, 3500}, {3599, 3500}, {3600, 3500}, {3601, 3500}, {3602, 3500}, {3603, 3500}, {3604, 3500}, {3605, 3500}, {3606, 3500}, {3607, 3500}, {3608, 3500}, {3609, 3500}, {3610, 3500}, {3611, 3500}, {3612, 3500}, {3613, 3500}, {3614, 3500}, {3615, 3500}, {3616, 3500}, {3617, 3500}, {3618, 3500}, {3619, 3500}, {3620, 3500}, {3621, 3500}, {3622, 3500}, {3623, 3500}, {3624, 3500}, {3625, 3500}, {3626, 3500}, {3627, 3500}, {3628, 3500}, {3629, 3500}, {3630, 3500}, {3631, 3500}, {3632, 3500}, {3633, 3500}, {3634, 3500}, {3635, 3500}, {3636, 3500}, {3637, 3500}, {3638, 3500}, {3639, 3500}, {3640, 3500}, {3641, 3500}, {3642, 3500}, {3643, 3500}, {3644, 3500}, {3645, 3500}, {3646, 3500}, {3647, 3500}, {3648, 3500}, {3649, 3500}, {3650, 3500}, {3651, 3500}, {3652, 3500}, {3653, 3500}, {3654, 3500}, {3655, 3500}, {3656, 3500}, {3657, 3500}, {3658, 3500}, {3659, 3500}, {3660, 3500}, {3661, 3500}, {3662, 3500}, {3663, 3500}, {3664, 3500}, {3665, 3500}, {3666, 3500}, {3667, 3500}, {3668, 3500}, {3669, 3500}, {3670, 3500}, {3671, 3500}, {3672, 3500}, {4050, 3500}, {4051, 3500}, {4052, 3500}, {4053, 3500}, {4054, 3500}, {4055, 3500}, {4056, 3500}, {4057, 3500}, {4058, 3500}, {4059, 3500}, {4060, 3500}, {4061, 3500}, {4062, 3500}, {4063, 3500}, {4064, 3500}, {4225, 3500}, {4226, 3500}, {4227, 3500}, {4228, 3500}, {4229, 3500}, {4230, 3500}, {4231, 3500}, {4232, 3500}, {4233, 3500}, {4234, 3500}, {4235, 3500}, {4236, 3500}, {4237, 3500}, {4238, 3500}, {4239, 3500}}};
  static LevelKindDefinition lk_ruins{data_dir + "/Ruins.rsrc", {{3501, 3500}, {3502, 3500}, {3503, 3500}, {3504, 3500}, {3505, 3500}, {3506, 3500}, {3507, 3500}, {3508, 3500}, {3509, 3500}, {3510, 3500}, {3511, 3500}, {3512, 3500}, {3513, 3500}, {3514, 3500}, {3515, 3500}, {3516, 3500}, {3517, 3500}, {3518, 3500}, {3519, 3500}, {3520, 3500}, {3521, 3500}, {3522, 3500}, {3523, 3500}, {3524, 3500}, {3525, 3500}, {3526, 3500}, {3527, 3500}, {3528, 3500}, {3529, 3500}, {3530, 3500}, {3531, 3500}, {3532, 3500}, {3533, 3500}, {3534, 3500}, {3535, 3500}, {3536, 3500}, {3537, 3500}, {3538, 3500}, {3539, 3500}, {3540, 3500}, {3541, 3500}, {3542, 3500}, {3543, 3500}, {3544, 3500}, {3545, 3500}, {3546, 3500}, {3547, 3500}, {3548, 3500}, {3549, 3500}, {3550, 3500}, {3551, 3500}, {3552, 3500}, {3553, 3500}, {3554, 3500}, {3555, 3500}, {3556, 3500}, {3557, 3500}, {3558, 3500}, {3559, 3500}, {3560, 3500}, {3561, 3500}, {3562, 3500}, {3563, 3500}, {3564, 3500}, {3565, 3500}, {3566, 3500}, {3567, 3500}, {3568, 3500}, {3569, 3500}, {3570, 3500}, {3571, 3500}, {3572, 3500}, {3573, 3500}, {3574, 3500}, {3575, 3500}, {3576, 3500}, {3577, 3500}, {3578, 3500}, {3579, 3500}, {3580, 3500}, {3581, 3500}, {3582, 3500}, {3583, 3500}, {3584, 3500}, {3585, 3500}, {3586, 3500}, {3587, 3500}, {3588, 3500}, {3589, 3500}, {3590, 3500}, {3591, 3500}, {3592, 3500}, {3593, 3500}, {3594, 3500}, {3595, 3500}, {3596, 3500}, {3597, 3500}, {3598, 3500}, {3599, 3500}, {3600, 3500}, {3601, 3500}, {3602, 3500}, {3603, 3500}, {4200, 3501}, {4201, 3501}, {4202, 3501}, {4203, 3501}, {4204, 3501}, {4205, 3501}, {4206, 3501}, {4207, 3501}, {4250, 3500}, {4251, 3500}, {4252, 3500}, {4253, 3500}, {4254, 3500}, {4255, 3500}, {4256, 3500}, {4257, 3500}, {4258, 3500}, {4259, 3500}, {4260, 3500}, {4261, 3500}, {4262, 3500}, {4263, 3500}, {4264, 3500}, {4265, 3500}, {4266, 3500}, {4650, 3502}, {4651, 3502}, {25374, 3500}}};
  static LevelKindDefinition lk_temple{data_dir + "/Temple.rsrc", {{3501, 3500}, {3502, 3500}, {3503, 3500}, {3504, 3500}, {3505, 3500}, {3506, 3500}, {3507, 3500}, {3508, 3500}, {3509, 3500}, {3510, 3500}, {3511, 3500}, {3512, 3500}, {3513, 3500}, {3514, 3500}, {3515, 3500}, {3516, 3500}, {3517, 3500}, {3518, 3500}, {3519, 3500}, {3520, 3500}, {3521, 3500}, {3522, 3500}, {3523, 3500}, {3524, 3500}, {3525, 3500}, {3526, 3500}, {3527, 3500}, {3528, 3500}, {3529, 3500}, {3530, 3500}, {3531, 3500}, {3532, 3500}, {3533, 3500}, {3534, 3500}, {3535, 3500}, {3536, 3500}, {3537, 3500}, {3538, 3500}, {3539, 3500}, {3540, 3500}, {3541, 3500}, {3542, 3500}, {3543, 3500}, {3544, 3500}, {3545, 3500}, {3546, 3500}, {3547, 3500}, {3548, 3500}, {3549, 3500}, {3550, 3500}, {3551, 3500}, {3552, 3500}, {3553, 3500}, {3554, 3500}, {3555, 3500}, {3556, 3500}, {3557, 3500}, {3558, 3500}, {3559, 3500}, {3560, 3500}, {3561, 3500}, {3562, 3500}, {3563, 3500}, {3564, 3500}, {3565, 3500}, {3566, 3500}, {3567, 3500}, {3568, 3500}, {3569, 3500}, {3570, 3500}, {3571, 3500}, {3572, 3500}, {3573, 3500}, {3574, 3500}, {3575, 3500}, {3576, 3500}, {3577, 3500}, {3578, 3500}, {3579, 3500}, {3580, 3500}, {3581, 3500}, {3582, 3500}, {3583, 3500}, {3584, 3500}, {3585, 3500}, {3586, 3500}, {3587, 3500}, {3588, 3500}, {3589, 3500}, {3590, 3500}, {3591, 3500}, {3592, 3500}, {3593, 3500}, {3594, 3500}, {3595, 3500}, {3596, 3500}, {3597, 3500}, {3598, 3500}, {3599, 3500}, {3600, 3500}, {3601, 3500}, {3602, 3500}, {3603, 3500}, {3604, 3500}, {3605, 3500}, {3606, 3500}, {3607, 3500}, {3608, 3500}, {3609, 3500}, {3610, 3500}, {3611, 3500}, {3612, 3500}, {3613, 3500}, {3614, 3500}, {3615, 3500}, {3616, 3500}, {3617, 3500}, {3618, 3500}, {3619, 3500}, {4025, 3500}, {4026, 3500}, {4075, 3500}, {4076, 3500}}};
  static LevelKindDefinition lk_final{data_dir + "/Final.rsrc", {{4000, 3500}, {4001, 3500}, {4025, 3500}, {4026, 3500}, {4050, 3501}, {4051, 3501}, {4052, 3501}, {4053, 3501}, {4054, 3501}, {4055, 3501}, {4056, 3501}, {4057, 3501}, {4058, 3501}, {4059, 3501}, {4060, 3501}, {4125, 3502}, {4126, 3502}, {4127, 3502}, {4128, 3502}, {4129, 3502}, {4130, 3502}, {4131, 3502}, {4132, 3502}, {4133, 3502}, {4134, 3502}, {4135, 3502}, {4136, 3502}, {4150, 3502}, {4151, 3502}, {4152, 3502}, {4153, 3502}, {4154, 3502}, {4155, 3502}, {4156, 3502}, {4157, 3502}, {4158, 3502}, {4159, 3502}, {4160, 3502}, {4161, 3502}, {4175, 3502}, {4176, 3502}, {4177, 3502}, {4178, 3502}, {4179, 3502}, {4180, 3502}, {4181, 3502}, {4182, 3502}, {4183, 3502}, {4184, 3502}, {4185, 3502}, {4186, 3502}, {4187, 3502}, {4188, 3502}, {4189, 3502}, {4275, 3501}, {4276, 3501}, {4277, 3501}, {4278, 3501}, {4279, 3501}, {4280, 3501}, {4300, 3501}, {4301, 3501}, {4302, 3501}, {4303, 3501}, {4304, 3501}, {4350, 3503}}};
  std::unordered_map<uint16_t, LevelKindDefinition> ret;
  ret.emplace(1, std::move(lk_desert));
  ret.emplace(2, std::move(lk_temple));
  ret.emplace(3, std::move(lk_caverns));
  ret.emplace(4, std::move(lk_ruins));
  ret.emplace(5, std::move(lk_rooftops));
  ret.emplace(6, std::move(lk_final));
  return ret;
}

struct PrinceOfPersia2Level {
  // room_tiles values for DOS (some are different on Mac!):
  // 00 = nothing
  // 01 = floor
  // 02 = spikes
  // 03 = pillar
  // 04 = gate
  // 05 = open trigger
  // 06 = close trigger
  // 07 = wall with hole
  // 08 = large pillar bottom
  // 09 = large pillar top
  // 0A = potion
  // 0B = loose floor
  // 0C = scythe left
  // 0D = scythe right
  // 0E = debris
  // 0F = super-loose floor
  // 10 = level door left
  // 11 = level door right
  // 12 = carpet
  // 13 = torch
  // 14 = wall
  // 15 = skeleton
  // 16 = sword
  // 17 = lava left
  // 18 = lava right
  // 19 = crusher
  // 1A = trap door
  // 1B = carpet aperture
  // 1C = water right
  // 1D = water left
  // 1E = sand floor
  // 1F = jaffar
  // 20 = torch with debris
  // 21 = level door left with skull
  // 22 = open/close tile
  // 23 = level door right with skull
  // 24 = peashooter
  // 25 = dock pillar
  // 26 = ship
  // 27 = window
  // 28 = spider
  // 29 = unknown
  // 2A = unknown
  // 2B = flame
  // 2C = bridge
  /* 0000 */ be_uint16_t room_tiles[32][30];
  struct TileModifiers {
    uint8_t mod0;
    uint8_t mod1;
    uint8_t mod2;
    uint8_t bg_index; // SHAP ID is this + 3501
  } __attribute__((packed));
  /* 0780 */ TileModifiers room_tile_mods[32][30];

  struct DoorLink {
    be_uint16_t room_id;
    be_uint16_t tile_index;
    be_uint16_t unknown_a1;
    be_uint16_t left;
    be_uint16_t right;
  } __attribute__((packed));
  /* 1680 */ DoorLink door_links[0x100];

  struct RoomLinks {
    be_uint16_t left;
    be_uint16_t right;
    be_uint16_t above;
    be_uint16_t below;
  } __attribute__((packed));
  /* 2080 */ RoomLinks room_links[0x20];

  /* 2180 */ uint8_t unknown_a1[6];
  /* 2186 */ be_uint16_t level_kind; // Key in level_kind_defs
  /* 2188 */ uint8_t unknown_a2[0x10];
  /* 2198 */ be_uint16_t start_room_id;
  /* 219A */ be_uint16_t start_tile_index;
  /* 219C */ be_uint16_t start_direction; // TODO: ??
  /* 219E */ uint8_t unknown_a3[6];

  // guard_kind:
  // 0 = guard
  // 2 = skeleton
  // 5 = head/snake
  // 7 = temple (bird)
  // 255 = none
  /* 21A4 */ be_uint16_t guard_kind;

  struct RoomGuards {
    /* 00 */ be_uint16_t num_guards;
    struct Guard {
      /* 00 */ be_uint16_t unknown_a1;
      /* 02 */ be_uint16_t unknown_a2;
      /* 04 */ be_uint16_t unknown_a3;
      /* 06 */ be_uint16_t unknown_a4;
      /* 08 */ be_uint16_t unknown_a5;
      /* 0A */ be_uint16_t unknown_a6;
      /* 0C */ be_uint16_t unknown_a7;
      /* 0E */ be_uint16_t unknown_a8;
      /* 10 */ be_uint16_t unknown_a9;
      /* 12 */ be_uint16_t unknown_a10;
      /* 14 */ be_uint16_t unknown_a11;
      /* 16 */ be_uint16_t unknown_a12;
      /* 18 */ be_uint16_t unknown_a13;
      /* 1A */ be_uint16_t unknown_a14;
      /* 1C */ be_uint16_t unknown_a15;
      /* 1E */ be_uint16_t unknown_a16;
      /* 20 */ be_uint16_t unknown_a17;
      /* 22 */ be_uint16_t unknown_a18;
      /* 24 */ be_uint16_t unknown_a19;
      /* 26 */
    } __attribute__((packed));
    /* 02 */ Guard guards[5];
    /* C0 */
  } __attribute__((packed));
  /* 21A6 */ RoomGuards room_guards[0x20];
  struct Checkpoint {
    be_uint16_t room_id;
    be_uint16_t tile_index;
  } __attribute__((packed));
  /* 39A6 */ Checkpoint checkpoints[9];
  /* 39CA */ uint8_t unknown_a4[0x1000];
  /* 49CA */
} __attribute__((packed));

struct RoomGraph {
  struct Component {
    uint8_t component_id;
    unordered_map<uint8_t, pair<int8_t, int8_t>> placement_map;
  };

  const PrinceOfPersia2Level* level;
  vector<Component> components;
  unordered_map<uint32_t, uint8_t> room_id_for_placement;

  uint32_t remaining_room_ids = 0xFFFFFFFF;

  static uint32_t placement_key(uint8_t component_id, int8_t x, int8_t y) {
    return (component_id << 16) | (static_cast<uint8_t>(x) << 8) | static_cast<uint8_t>(y);
  }

  bool room_is_remaining(uint8_t room_id) const {
    return this->remaining_room_ids & (1 << room_id);
  }
  void mark_room_done(uint8_t room_id) {
    this->remaining_room_ids &= ~(1 << room_id);
  }

  void place_room(Component& component, uint8_t room_id, int8_t x, int8_t y) {
    uint32_t placement_key = this->placement_key(component.component_id, x, y);

    if (this->room_is_remaining(room_id)) {
      this->mark_room_done(room_id);

      component.placement_map.emplace(room_id, make_pair(x, y));
      this->room_id_for_placement.emplace(placement_key, room_id);

      const auto& links = this->level->room_links[room_id];
      if (links.left) {
        this->place_room(component, links.left - 1, x - 1, y);
      }
      if (links.right) {
        this->place_room(component, links.right - 1, x + 1, y);
      }
      if (links.above) {
        this->place_room(component, links.above - 1, x, y - 1);
      }
      if (links.below) {
        this->place_room(component, links.below - 1, x, y + 1);
      }

      // If the room was already placed, ensure the room's existing placement
      // matches the one we're supposed to add
    } else {
      auto it = this->room_id_for_placement.find(placement_key);
      if (it == this->room_id_for_placement.end() || it->second != room_id) {
        phosg::fwrite_fmt(stderr, "Warning: bad backlink at room {}", room_id);
      }
    }
  }

  void place_component(uint8_t start_room_id) {
    auto& component = this->components.emplace_back();
    component.component_id = this->components.size() - 1;
    this->place_room(component, start_room_id, 0, 0);
    if (component.placement_map.empty()) {
      components.pop_back(); // Room was already placed in another component
    } else {
      // Make all offsets nonnegative
      int16_t delta_x = 0, delta_y = 0;
      for (const auto& it : component.placement_map) {
        if (it.second.first < delta_x) {
          delta_x = it.second.first;
        }
        if (it.second.second < delta_y) {
          delta_y = it.second.second;
        }
      }
      for (auto& [room_id, placement] : component.placement_map) {
        this->room_id_for_placement.erase(this->placement_key(component.component_id, placement.first, placement.second));
        placement.first -= delta_x;
        placement.second -= delta_y;
        this->room_id_for_placement.emplace(this->placement_key(component.component_id, placement.first, placement.second), room_id);
      }
    }
  };

  RoomGraph(const PrinceOfPersia2Level* level) : level(level) {
    for (uint8_t room_id = 0; room_id < 32; room_id++) {
      if (this->room_is_remaining(room_id)) {
        this->place_component(room_id);
        if (this->room_is_remaining(room_id)) {
          throw logic_error("room ID present in remaining set after processing");
        }
      }
    }
  }
};

int main(int argc, char** argv) {
  phosg::Arguments args(argv + 1, argc - 1);

  const auto& data_dir = args.get<string>(0);
  string output_dir = args.get<string>(1, false);
  if (output_dir.empty()) {
    output_dir = ".";
  }

  auto prince_rsrc = parse_resource_fork(phosg::load_file(data_dir + "/Prince.rsrc/..namedfork/rsrc"));
  auto level_kind_defs = load_level_kinds(data_dir);

  for (const auto& res_id : prince_rsrc.all_resources_of_type(RESOURCE_TYPE_LEVL)) {
    auto res = prince_rsrc.get_resource(RESOURCE_TYPE_LEVL, res_id);
    if (res->data.size() != sizeof(PrinceOfPersia2Level)) {
      throw runtime_error(format("invalid LEVL resource with ID {}", res_id));
    }
    const auto* level = reinterpret_cast<const PrinceOfPersia2Level*>(res->data.data());

    LevelKindDefinition* level_kind = nullptr;
    try {
      level_kind = &level_kind_defs.at(level->level_kind);
    } catch (const out_of_range&) {
    }

    RoomGraph room_graph(level);
    for (const auto& component : room_graph.components) {
      size_t w_rooms = 0, h_rooms = 0;
      for (const auto& [_, placement] : component.placement_map) {
        w_rooms = max<size_t>(placement.first + 1, w_rooms);
        h_rooms = max<size_t>(placement.second + 1, h_rooms);
      }

      // Tiles are 51x120 pixels (virtual screen is 512x360)
      constexpr size_t TILE_W_PIXELS = 51;
      constexpr size_t TILE_H_PIXELS = 120;
      phosg::ImageRGBA8888N map(w_rooms * TILE_W_PIXELS * 10, h_rooms * TILE_H_PIXELS * 3);
      map.clear(0x202020FF);
      for (const auto& [room_id, placement] : component.placement_map) {
        size_t room_x = placement.first * (TILE_W_PIXELS * 10);
        size_t room_y = placement.second * (TILE_H_PIXELS * 3);
        const auto& room_tiles = level->room_tiles[room_id];
        const auto& room_tile_mods = level->room_tile_mods[room_id];

        // Draw background tiles. Draw white first in case the background SHAPs
        // or CUST doesn't fill in everything (or is/are missing)
        map.write_rect(room_x, room_y, TILE_W_PIXELS * 10, TILE_H_PIXELS * 3, 0xFFFFFFFF);

        if (level_kind) {
          try {
            auto cust = level_kind->get_CUST((room_id * 25) + 4000);
            for (const auto& piece : cust.pieces) {
              if (!piece.is_animated) {
                const auto& shap = level_kind->get_SHAP(piece.shap_id);
                map.copy_from(shap, room_x + piece.left_offset, room_y + TILE_H_PIXELS * 3 - piece.bottom_offset, shap.w, shap.h, 0, 0);
              }
            }
          } catch (const out_of_range&) {
            for (size_t z = 0; z < 30; z++) {
              try {
                size_t tile_x = room_x + (z % 10) * TILE_W_PIXELS;
                size_t tile_y = room_y + (z / 10) * TILE_H_PIXELS;
                const auto& shap = level_kind->get_SHAP(3501 + room_tile_mods[z].bg_index);
                map.copy_from(shap, tile_x, tile_y, TILE_W_PIXELS, TILE_H_PIXELS, 0, 0);
              } catch (const out_of_range&) {
              }
            }
          }
        }

        for (size_t z = 0; z < 30; z++) {
          size_t tile_x = room_x + (z % 10) * TILE_W_PIXELS;
          size_t tile_y = room_y + (z / 10) * TILE_H_PIXELS;

          uint32_t annotation_color;
          switch (room_tiles[z]) {
            case 0x0000: // Empty space
              annotation_color = 0xC0C0C0FF;
              break;
            case 0x0001: // Floor
              // mod1 appears to be decoration type (at least, on rooftops)
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x000000FF);
              annotation_color = 0xC0C0C0FF;
              break;
            case 0x0002: // Spikes (right edge)
              map.write_rect(tile_x, tile_y, TILE_W_PIXELS - 10, TILE_H_PIXELS, 0x808080FF);
              map.write_rect(tile_x + TILE_W_PIXELS - 10, tile_y, 10, TILE_H_PIXELS, 0xFF8000FF);
              annotation_color = 0x404040FF;
              break;
            case 0x0003: // Small pillar
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x000000FF);
              map.write_rect(tile_x + 3 * TILE_W_PIXELS / 8, tile_y, TILE_W_PIXELS / 4, TILE_H_PIXELS - 6, 0xC0C0C0FF);
              annotation_color = 0xA0A0A0FF;
              break;
            case 0x0004: // Gate
              map.write_rect(tile_x + TILE_W_PIXELS - 3, tile_y, 3, TILE_H_PIXELS - 6, 0x0080FFFF);
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x000000FF);
              annotation_color = 0xC0C0C0FF;
              break;
            case 0x0007: // Tunnel
              map.write_rect(tile_x, tile_y, TILE_W_PIXELS, TILE_H_PIXELS / 2, 0x808080FF);
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS / 2, TILE_W_PIXELS, TILE_H_PIXELS / 2 - 6, 0xE0E0E0FF);
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x000000FF);
              annotation_color = 0x404040FF;
              break;
            case 0x0008: // Large pillar bottom
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x000000FF);
              map.write_rect(tile_x + TILE_W_PIXELS / 3, tile_y, TILE_W_PIXELS / 3, TILE_H_PIXELS - 6, 0xC0C0C0FF);
              annotation_color = 0xA0A0A0FF;
              break;
            case 0x0009: // Large pillar top
              map.write_rect(tile_x + TILE_W_PIXELS / 3, tile_y, TILE_W_PIXELS / 3, TILE_H_PIXELS, 0xC0C0C0FF);
              annotation_color = 0xA0A0A0FF;
              break;
            case 0x000A: // Potion
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x000000FF);
              map.write_rect(
                  tile_x + 3 * TILE_W_PIXELS / 8,
                  tile_y + TILE_H_PIXELS - TILE_W_PIXELS / 4 - 8,
                  TILE_W_PIXELS / 4, TILE_W_PIXELS / 4, 0xFF8000FF);
              annotation_color = 0xA0A0A0FF;
              break;
            case 0x000B: // Loose floor
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x008080FF);
              annotation_color = 0xC0C0C0FF;
              break;
            case 0x000E: // Debris
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x000000FF);
              map.write_rect(tile_x + TILE_W_PIXELS / 4, tile_y + TILE_H_PIXELS - 8, TILE_W_PIXELS / 2, 2, 0x404040FF);
              annotation_color = 0xC0C0C0FF;
              break;
            case 0x000F: // Super-loose floor
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x00C0C0FF);
              annotation_color = 0xC0C0C0FF;
              break;
            case 0x0010: // Level door left
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x000000FF);
              map.draw_vertical_line(tile_x + 20, tile_y + 20, tile_y + TILE_H_PIXELS - 6, 0, 0x008000FF);
              map.draw_vertical_line(tile_x + 21, tile_y + 21, tile_y + TILE_H_PIXELS - 6, 0, 0x008000FF);
              map.draw_horizontal_line(tile_x + 20, tile_x + TILE_W_PIXELS, tile_y + 20, 0, 0x008000FF);
              map.draw_horizontal_line(tile_x + 20, tile_x + TILE_W_PIXELS, tile_y + 21, 0, 0x008000FF);
              annotation_color = 0xC0C0C0FF;
              break;
            case 0x0011: // Level door right
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x000000FF);
              map.draw_vertical_line(tile_x + TILE_W_PIXELS - 20, tile_y + 20, tile_y + TILE_H_PIXELS - 6, 0, 0x008000FF);
              map.draw_vertical_line(tile_x + TILE_W_PIXELS - 21, tile_y + 21, tile_y + TILE_H_PIXELS - 6, 0, 0x008000FF);
              map.draw_horizontal_line(tile_x, tile_x + TILE_W_PIXELS - 20, tile_y + 20, 0, 0x008000FF);
              map.draw_horizontal_line(tile_x, tile_x + TILE_W_PIXELS - 20, tile_y + 21, 0, 0x008000FF);
              annotation_color = 0xC0C0C0FF;
              break;
            case 0x0013: // Torch
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x000000FF);
              map.write_rect(
                  tile_x + 3 * TILE_W_PIXELS / 8,
                  tile_y + TILE_H_PIXELS / 3,
                  TILE_W_PIXELS / 4, TILE_H_PIXELS / 3, 0xFFC080FF);
              annotation_color = 0xA0A0A0FF;
              break;
            case 0x0014: // Wall
              map.write_rect(tile_x, tile_y, TILE_W_PIXELS, TILE_H_PIXELS, 0x808080FF);
              annotation_color = 0x404040FF;
              break;
            case 0x0017: // Lava left
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS / 4, 6, 0x000000FF);
              map.write_rect(tile_x + TILE_W_PIXELS / 4, tile_y + TILE_H_PIXELS - 6, 3 * TILE_W_PIXELS / 4, 6, 0xFF8000FF);
              annotation_color = 0xA0A0A0FF;
              break;
            case 0x0018: // Lava right
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, 3 * TILE_W_PIXELS / 4, 6, 0xFF8000FF);
              map.write_rect(tile_x + 3 * TILE_W_PIXELS / 4, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS / 4, 6, 0x000000FF);
              annotation_color = 0xA0A0A0FF;
              break;
            case 0x0021: // Dart gun
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 6, TILE_W_PIXELS, 6, 0x000000FF);
              map.write_rect(tile_x + TILE_W_PIXELS / 8, tile_y + TILE_H_PIXELS - TILE_W_PIXELS / 4 - 8, TILE_W_PIXELS / 4, TILE_W_PIXELS / 4, 0xFF0000FF);
              annotation_color = 0xA0A0A0FF;
              break;
            case 0x0022: // Pressure plate
              map.write_rect(tile_x, tile_y + TILE_H_PIXELS - 8, TILE_W_PIXELS, 6, 0x008000FF);
              annotation_color = 0xA0A0A0FF;
              break;
            case 0x002F: // Dock pillar
              map.write_rect(tile_x + TILE_W_PIXELS / 4, tile_y, TILE_W_PIXELS / 2, TILE_H_PIXELS, 0x562B00FF);
              annotation_color = 0x404040FF;
              break;
            default:
              map.write_rect(tile_x, tile_y, TILE_W_PIXELS, TILE_H_PIXELS, 0xFF0000FF);
              annotation_color = 0x000000FF;
          }
          map.draw_text(tile_x, tile_y, annotation_color, "{:04X}\n{:02X}\n{:02X}\n{:02X}\n{:02X}",
              room_tiles[z].load(), room_tile_mods[z].mod0, room_tile_mods[z].mod1, room_tile_mods[z].mod2, room_tile_mods[z].bg_index);
        }
        map.draw_text(room_x, room_y, 0xFF0000FF, "     RM{:02X}", room_id);
      }

      string filename = format("{}/pop2_level{}_part{}.bmp", output_dir, res_id, component.component_id);
      phosg::save_file(filename, map.serialize(phosg::ImageFormat::WINDOWS_BITMAP));
      phosg::fwrite_fmt(stderr, "... {}\n", filename);
    }
  }

  return 0;
}
